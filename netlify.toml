[build]
  publish = ".next"
  command = "bash scripts/netlify-build.sh"

[build.environment]
  NODE_VERSION = "20"
  NPM_VERSION = "10"
  NEXT_TELEMETRY_DISABLED = "1"
  SKIP_TYPE_CHECK = "true"
  PRISMA_CLI_BINARY_TARGETS = "debian-openssl-1.1.x,debian-openssl-3.0.x,rhel-openssl-1.0.x,rhel-openssl-3.0.x,linux-musl,linux-arm64-openssl-1.1.x,linux-arm64-openssl-3.0.x"
  NPM_FLAGS = "--legacy-peer-deps"
  # Increase Node.js memory limit for build
  NODE_OPTIONS = "--max-old-space-size=4096"
  # Disable Prisma telemetry
  CHECKPOINT_DISABLE = "1"

# Next.js specific configuration
[[plugins]]
  package = "@netlify/plugin-nextjs"

# Headers for security and performance
[[headers]]
  for = "/*"
  [headers.values]
    X-Frame-Options = "SAMEORIGIN"
    X-Content-Type-Options = "nosniff"
    X-XSS-Protection = "1; mode=block"
    Referrer-Policy = "strict-origin-when-cross-origin"
    Permissions-Policy = "camera=(), microphone=(), geolocation=()"

# PDF files - allow embedding in iframes
[[headers]]
  for = "*.pdf"
  [headers.values]
    X-Frame-Options = "ALLOWALL"
    Cache-Control = "public, max-age=31536000, immutable"

# Static assets caching
[[headers]]
  for = "/images/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/fonts/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/_next/static/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

# API routes
[[headers]]
  for = "/api/*"
  [headers.values]
    Cache-Control = "no-cache, no-store, must-revalidate"

# Sitemap and robots
[[headers]]
  for = "/sitemap.xml"
  [headers.values]
    Content-Type = "application/xml"
    Cache-Control = "public, max-age=86400"

[[headers]]
  for = "/robots.txt"
  [headers.values]
    Content-Type = "text/plain"
    Cache-Control = "public, max-age=86400"

[[headers]]
  for = "/feed.xml"
  [headers.values]
    Content-Type = "application/rss+xml"
    Cache-Control = "public, max-age=86400"

# Redirects for SEO
[[redirects]]
  from = "/resume"
  to = "/resume.pdf"
  status = 301

[[redirects]]
  from = "/cv"
  to = "/resume.pdf"
  status = 301

# Environment variables for production
[context.production.environment]
  NETLIFY_URL = "https://greenhacker.tech"
  NODE_ENV = "production"

# Deploy previews
[context.deploy-preview]
  command = "bash scripts/netlify-build.sh"

[context.branch-deploy]
  command = "bash scripts/netlify-build.sh"

# Fallback build commands
[context.production]
  command = "bash scripts/netlify-build.sh"

# Functions (if needed for API routes)
[functions]
  directory = ".netlify/functions"

# Form handling (if contact form is added)
[build.processing]
  skip_processing = false

[build.processing.css]
  bundle = true
  minify = true

[build.processing.js]
  bundle = true
  minify = true

[build.processing.html]
  pretty_urls = true

# Edge functions for performance
[[edge_functions]]
  function = "geolocation"
  path = "/api/location"

# Security headers for enhanced protection
[[headers]]
  for = "/.well-known/*"
  [headers.values]
    Cache-Control = "public, max-age=86400"

# Preload critical resources
[[headers]]
  for = "/"
  [headers.values]
    Link = "</logo.jpg>; rel=preload; as=image, </resume.pdf>; rel=prefetch"
